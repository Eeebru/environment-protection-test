---
name: Test
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        default: 'QA'
        type: choice
        options:
          - USQA
          - EUQA
          - USPROD
          - USDEV
      branch-or-tag:
        description: "Branch or Tag name to deploy (examples: 'main', 'feature/sm', 'web-v2023.12.0')"
        type: string
        default: main

jobs:
  
  test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Testing environment
        run: |
          echo "Testing on ${{ inputs.environment }} environment"
          echo "Branch or Tag: ${{ inputs.branch-or-tag }}"

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@55729fcebec3d284f60f5bcabbd8376437d696b1 # v2.0.7
        id: deployment
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          initial-status: 'in_progress'
          environment: ${{ inputs.environment }}
          description: 'Deployment from branch/tag: ${{ inputs.branch-or-tag }}'
          ref: ${{ inputs.branch-or-tag }}

      - name: Update deployment status to Success
        if: success()
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806 # v2.0.3
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status to Failure
        if: failure()
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806 # v2.0.3
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
